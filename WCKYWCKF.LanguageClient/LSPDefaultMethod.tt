<#@ template language="C#" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

<#
    var list = new[]
    {
        "initialize",
        "initialized",
        "client/registerCapability",
        "client/unregisterCapability",
        "$/setTrace",
        "$/logTrace",
        "shutdown",
        "exit",
        "textDocument/didOpen",
        "textDocument/didChange",
        "textDocument/willSave",
        "textDocument/willSaveWaitUntil",
        "textDocument/didSave",
        "textDocument/didClose",
        "notebookDocument/didOpen",
        "notebookDocument/didChange",
        "notebookDocument/didSave",
        "notebookDocument/didClose",
        "textDocument/declaration",
        "textDocument/definition",
        "textDocument/typeDefinition",
        "textDocument/implementation",
        "textDocument/references",
        "textDocument/prepareCallHierarchy",
        "callHierarchy/incomingCalls",
        "callHierarchy/outgoingCalls",
        "textDocument/prepareTypeHierarchy",
        "typeHierarchy/supertypes",
        "typeHierarchy/subtypes",
        "textDocument/documentHighlight",
        "textDocument/documentLink",
        "documentLink/resolve",
        "textDocument/hover",
        "textDocument/codeLens",
        "codeLens/resolve",
        "workspace/codeLens/refresh",
        "textDocument/foldingRange",
        "workspace/foldingRange/refresh",
        "textDocument/selectionRange",
        "textDocument/documentSymbol",
        "textDocument/semanticTokens/full",
        "textDocument/semanticTokens/full/delta",
        "textDocument/semanticTokens/range",
        "workspace/semanticTokens/refresh",
        "textDocument/inlayHint",
        "inlayHint/resolve",
        "workspace/inlayHint/refresh",
        "textDocument/inlineValue",
        "workspace/inlineValue/refresh",
        "textDocument/moniker",
        "textDocument/completion",
        "completionItem/resolve",
        "textDocument/publishDiagnostics",
        "textDocument/diagnostic",
        "workspace/diagnostic",
        "workspace/diagnostic/refresh",
        "textDocument/signatureHelp",
        "textDocument/codeAction",
        "codeAction/resolve",
        "textDocument/documentColor",
        "textDocument/colorPresentation",
        "textDocument/formatting",
        "textDocument/rangeFormatting",
        "textDocument/onTypeFormatting",
        "textDocument/rename",
        "textDocument/prepareRename",
        "textDocument/linkedEditingRange",
        "textDocument/inlineCompletion",
        "workspace/symbol",
        "workspaceSymbol/resolve",
        "workspace/configuration",
        "workspace/didChangeConfiguration",
        "workspace/workspaceFolders",
        "workspace/didChangeWorkspaceFolders",
        "workspace/willCreateFiles",
        "workspace/didCreateFiles",
        "workspace/willRenameFiles",
        "workspace/didRenameFiles",
        "workspace/willDeleteFiles",
        "workspace/didDeleteFiles",
        "workspace/didChangeWatchedFiles",
        "workspace/executeCommand",
        "workspace/applyEdit",
        "workspace/textDocumentContent",
        "workspace/textDocumentContent/refresh",
        "window/showMessage",
        "window/showMessageRequest",
        "window/showDocument",
        "window/logMessage",
        "window/workDoneProgress/create",
        "window/workDoneProgress/cancel",
        "telemetry/event",
        "$/progress",
    };
#>
namespace WCKYWCKF.EmmyLua.LanguageServer.Framework.ClientEx;

public struct LSPDefaultMethod
{
    <#
    foreach (var method in list)
    {
#>
public const string <#= method.Replace('/', '_').Replace("$_", "") #> = "<#= method #>";
    <#
    }
#>

}